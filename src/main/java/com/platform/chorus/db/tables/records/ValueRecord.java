/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.database.tables.records;


import com.platform.chorus.database.tables.Value;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ValueRecord extends UpdatableRecordImpl<ValueRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = -186438541;

    /**
     * Setter for <code>public.value.owner</code>.
     */
    public void setOwner(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.value.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.value.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.value.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.value.class</code>.
     */
    public void setClass_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.value.class</code>.
     */
    public String getClass_() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.value.creator</code>.
     */
    public void setCreator(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.value.creator</code>.
     */
    public String getCreator() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.value.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.value.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Value.VALUE.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Value.VALUE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Value.VALUE.CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Value.VALUE.CREATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Value.VALUE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getClass_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCreator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getClass_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCreator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value1(Integer value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value3(String value) {
        setClass_(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value4(String value) {
        setCreator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ValueRecord
     */
    public ValueRecord() {
        super(Value.VALUE);
    }

    /**
     * Create a detached, initialised ValueRecord
     */
    public ValueRecord(Integer owner, String type, String class_, String creator, String description) {
        super(Value.VALUE);

        set(0, owner);
        set(1, type);
        set(2, class_);
        set(3, creator);
        set(4, description);
    }
}
