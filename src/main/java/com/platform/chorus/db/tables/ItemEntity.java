/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.db.tables;


import com.platform.chorus.db.Keys;
import com.platform.chorus.db.Public;
import com.platform.chorus.db.tables.records.ItemEntityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemEntity extends TableImpl<ItemEntityRecord> {

    private static final long serialVersionUID = -2076398286;

    /**
     * The reference instance of <code>public.item_entity</code>
     */
    public static final ItemEntity ITEM_ENTITY = new ItemEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemEntityRecord> getRecordType() {
        return ItemEntityRecord.class;
    }

    /**
     * The column <code>public.item_entity.id</code>.
     */
    public final TableField<ItemEntityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('item_entity_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.item_entity.name</code>.
     */
    public final TableField<ItemEntityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.item_entity.type</code>.
     */
    public final TableField<ItemEntityRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.item_entity.creator</code>.
     */
    public final TableField<ItemEntityRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.item_entity.tags</code>.
     */
    public final TableField<ItemEntityRecord, String[]> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.item_entity.contains</code>.
     */
    public final TableField<ItemEntityRecord, Integer[]> CONTAINS = createField("contains", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.item_entity.description</code>.
     */
    public final TableField<ItemEntityRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.item_entity</code> table reference
     */
    public ItemEntity() {
        this(DSL.name("item_entity"), null);
    }

    /**
     * Create an aliased <code>public.item_entity</code> table reference
     */
    public ItemEntity(String alias) {
        this(DSL.name(alias), ITEM_ENTITY);
    }

    /**
     * Create an aliased <code>public.item_entity</code> table reference
     */
    public ItemEntity(Name alias) {
        this(alias, ITEM_ENTITY);
    }

    private ItemEntity(Name alias, Table<ItemEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemEntity(Name alias, Table<ItemEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ItemEntityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ITEM_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemEntityRecord> getPrimaryKey() {
        return Keys.ITEM_ENTITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemEntityRecord>>asList(Keys.ITEM_ENTITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemEntity as(String alias) {
        return new ItemEntity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemEntity as(Name alias) {
        return new ItemEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemEntity rename(String name) {
        return new ItemEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemEntity rename(Name name) {
        return new ItemEntity(name, null);
    }
}
