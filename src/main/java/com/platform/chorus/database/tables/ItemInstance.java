/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.database.tables;


import com.platform.chorus.database.Keys;
import com.platform.chorus.database.Public;
import com.platform.chorus.database.tables.records.ItemInstanceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemInstance extends TableImpl<ItemInstanceRecord> {

    private static final long serialVersionUID = 1817965619;

    /**
     * The reference instance of <code>public.item_instance</code>
     */
    public static final ItemInstance ITEM_INSTANCE = new ItemInstance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemInstanceRecord> getRecordType() {
        return ItemInstanceRecord.class;
    }

    /**
     * The column <code>public.item_instance.oid</code>.
     */
    public final TableField<ItemInstanceRecord, Integer> OID = createField("oid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('ci_objects_oid_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.item_instance.type</code>.
     */
    public final TableField<ItemInstanceRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<ItemInstanceRecord, Object> CONTENT = createField("content", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * The column <code>public.item_instance.refs</code>.
     */
    public final TableField<ItemInstanceRecord, Integer[]> REFS = createField("refs", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.item_instance.tags</code>.
     */
    public final TableField<ItemInstanceRecord, String[]> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * Create a <code>public.item_instance</code> table reference
     */
    public ItemInstance() {
        this(DSL.name("item_instance"), null);
    }

    /**
     * Create an aliased <code>public.item_instance</code> table reference
     */
    public ItemInstance(String alias) {
        this(DSL.name(alias), ITEM_INSTANCE);
    }

    /**
     * Create an aliased <code>public.item_instance</code> table reference
     */
    public ItemInstance(Name alias) {
        this(alias, ITEM_INSTANCE);
    }

    private ItemInstance(Name alias, Table<ItemInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemInstance(Name alias, Table<ItemInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ItemInstanceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ITEM_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemInstanceRecord> getPrimaryKey() {
        return Keys.CI_OBJECTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemInstanceRecord>>asList(Keys.CI_OBJECTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstance as(String alias) {
        return new ItemInstance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstance as(Name alias) {
        return new ItemInstance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemInstance rename(String name) {
        return new ItemInstance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemInstance rename(Name name) {
        return new ItemInstance(name, null);
    }
}
