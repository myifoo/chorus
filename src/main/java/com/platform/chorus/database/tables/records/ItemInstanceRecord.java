/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.database.tables.records;


import com.platform.chorus.database.tables.ItemInstance;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemInstanceRecord extends UpdatableRecordImpl<ItemInstanceRecord> implements Record5<Integer, String, Object, Integer[], String[]> {

    private static final long serialVersionUID = 1976267312;

    /**
     * Setter for <code>public.item_instance.oid</code>.
     */
    public void setOid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.item_instance.oid</code>.
     */
    public Integer getOid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.item_instance.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.item_instance.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setContent(Object value) {
        set(2, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getContent() {
        return get(2);
    }

    /**
     * Setter for <code>public.item_instance.refs</code>.
     */
    public void setRefs(Integer... value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.item_instance.refs</code>.
     */
    public Integer[] getRefs() {
        return (Integer[]) get(3);
    }

    /**
     * Setter for <code>public.item_instance.tags</code>.
     */
    public void setTags(String... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.item_instance.tags</code>.
     */
    public String[] getTags() {
        return (String[]) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Object, Integer[], String[]> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Object, Integer[], String[]> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ItemInstance.ITEM_INSTANCE.OID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ItemInstance.ITEM_INSTANCE.TYPE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field3() {
        return ItemInstance.ITEM_INSTANCE.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer[]> field4() {
        return ItemInstance.ITEM_INSTANCE.REFS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field5() {
        return ItemInstance.ITEM_INSTANCE.TAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getOid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getType();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component3() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] component4() {
        return getRefs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component5() {
        return getTags();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getOid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value3() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer[] value4() {
        return getRefs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value5() {
        return getTags();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstanceRecord value1(Integer value) {
        setOid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstanceRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public ItemInstanceRecord value3(Object value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstanceRecord value4(Integer... value) {
        setRefs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstanceRecord value5(String... value) {
        setTags(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemInstanceRecord values(Integer value1, String value2, Object value3, Integer[] value4, String[] value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemInstanceRecord
     */
    public ItemInstanceRecord() {
        super(ItemInstance.ITEM_INSTANCE);
    }

    /**
     * Create a detached, initialised ItemInstanceRecord
     */
    public ItemInstanceRecord(Integer oid, String type, Object content, Integer[] refs, String[] tags) {
        super(ItemInstance.ITEM_INSTANCE);

        set(0, oid);
        set(1, type);
        set(2, content);
        set(3, refs);
        set(4, tags);
    }
}
