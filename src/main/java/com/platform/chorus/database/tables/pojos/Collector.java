/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.database.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Collector implements Serializable {

    private static final long serialVersionUID = -931411043;

    private String   name;
    private String   result;
    private String[] injects;
    private String   argument;
    private String   description;

    public Collector() {}

    public Collector(Collector value) {
        this.name = value.name;
        this.result = value.result;
        this.injects = value.injects;
        this.argument = value.argument;
        this.description = value.description;
    }

    public Collector(
        String   name,
        String   result,
        String[] injects,
        String   argument,
        String   description
    ) {
        this.name = name;
        this.result = result;
        this.injects = injects;
        this.argument = argument;
        this.description = description;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getResult() {
        return this.result;
    }

    public void setResult(String result) {
        this.result = result;
    }

    public String[] getInjects() {
        return this.injects;
    }

    public void setInjects(String... injects) {
        this.injects = injects;
    }

    public String getArgument() {
        return this.argument;
    }

    public void setArgument(String argument) {
        this.argument = argument;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Collector (");

        sb.append(name);
        sb.append(", ").append(result);
        sb.append(", ").append(Arrays.toString(injects));
        sb.append(", ").append(argument);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
