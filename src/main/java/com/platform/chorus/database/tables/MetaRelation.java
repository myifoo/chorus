/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.database.tables;


import com.platform.chorus.database.Public;
import com.platform.chorus.database.tables.records.MetaRelationRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetaRelation extends TableImpl<MetaRelationRecord> {

    private static final long serialVersionUID = 72876425;

    /**
     * The reference instance of <code>public.meta_relation</code>
     */
    public static final MetaRelation META_RELATION = new MetaRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetaRelationRecord> getRecordType() {
        return MetaRelationRecord.class;
    }

    /**
     * The column <code>public.meta_relation.type</code>.
     */
    public final TableField<MetaRelationRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>public.meta_relation.sid</code>.
     */
    public final TableField<MetaRelationRecord, Integer> SID = createField("sid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.meta_relation.tid</code>.
     */
    public final TableField<MetaRelationRecord, Integer> TID = createField("tid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.meta_relation</code> table reference
     */
    public MetaRelation() {
        this(DSL.name("meta_relation"), null);
    }

    /**
     * Create an aliased <code>public.meta_relation</code> table reference
     */
    public MetaRelation(String alias) {
        this(DSL.name(alias), META_RELATION);
    }

    /**
     * Create an aliased <code>public.meta_relation</code> table reference
     */
    public MetaRelation(Name alias) {
        this(alias, META_RELATION);
    }

    private MetaRelation(Name alias, Table<MetaRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private MetaRelation(Name alias, Table<MetaRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaRelation as(String alias) {
        return new MetaRelation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaRelation as(Name alias) {
        return new MetaRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaRelation rename(String name) {
        return new MetaRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaRelation rename(Name name) {
        return new MetaRelation(name, null);
    }
}
