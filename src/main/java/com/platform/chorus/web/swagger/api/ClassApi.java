/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.platform.chorus.web.swagger.api;

import com.platform.chorus.web.swagger.model.ClassMeta;
import com.platform.chorus.web.swagger.model.ErrorResponseBody;
import com.platform.chorus.web.swagger.model.SuccessResponseBody;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-04-13T03:43:08.909Z[GMT]")
@Api(value = "class", description = "the class API")
public interface ClassApi {

    @ApiOperation(value = "create new meta class", nickname = "createMetaClass", notes = "create new meta class", response = Object.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class cid", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/meta",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> createMetaClass(@ApiParam(value = "class array" ,required=true )  @Valid @RequestBody ClassMeta body);


    @ApiOperation(value = "create new meta class", nickname = "createMetaClasses", notes = "create new meta class", response = SuccessResponseBody.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return success", response = SuccessResponseBody.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/meta/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SuccessResponseBody> createMetaClasses(@ApiParam(value = "class array" ,required=true )  @Valid @RequestBody List<ClassMeta> body);


    @ApiOperation(value = "get class meta detail by id", nickname = "getClassMeta", notes = "get class meta detail by id", response = Object.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class meta", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/meta",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Object> getClassMeta(@NotNull @ApiParam(value = "ID of class", required = true) @Valid @RequestParam(value = "cid", required = true) Integer cid);


    @ApiOperation(value = "get class overview by id", nickname = "getClassOverviewById", notes = "get class overview by id", response = Object.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/overview",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Object> getClassOverviewById(@NotNull @ApiParam(value = "ID of class", required = true) @Valid @RequestParam(value = "cid", required = true) Integer cid);


    @ApiOperation(value = "get meta classes overview with parameters", nickname = "getClassesOverview", notes = "get meta classes overview with parameters", response = Object.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/overview/list",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Object> getClassesOverview(@ApiParam(value = "class number limit") @Valid @RequestParam(value = "limit", required = false) Integer limit,@ApiParam(value = "class number offset") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "class package string pattern") @Valid @RequestParam(value = "package", required = false) String _package,@ApiParam(value = "class name string pattern") @Valid @RequestParam(value = "name", required = false) String name);


    @ApiOperation(value = "get all meta classes overview with request body", nickname = "getClassesOverviewWithBody", notes = "get all meta classes overview  with request body", response = Object.class, tags={ "meta-class", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/class/overview/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> getClassesOverviewWithBody(@ApiParam(value = "class id list"  )  @Valid @RequestBody List<Integer> body);

}
