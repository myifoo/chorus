/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.7).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.platform.chorus.web.swagger.api;

import com.platform.chorus.web.swagger.model.ErrorResponseBody;
import com.platform.chorus.web.swagger.model.Instance;
import com.platform.chorus.web.swagger.model.SuccessResponseBody;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-04-13T03:43:08.909Z[GMT]")
@Api(value = "instance", description = "the instance API")
public interface InstanceApi {

    @ApiOperation(value = "createClass instance", nickname = "createInstance", notes = "createClass instance", response = Object.class, tags={ "instance", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/instance",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> createInstance(@ApiParam(value = "instance content" ,required=true )  @Valid @RequestBody List<Instance> body);


    @ApiOperation(value = "get class overview by id", nickname = "getInstance", notes = "get class overview by id", response = SuccessResponseBody.class, tags={ "instance", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = SuccessResponseBody.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/instance",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<SuccessResponseBody> getInstance(@NotNull @ApiParam(value = "ID of class", required = true) @Valid @RequestParam(value = "id", required = true) Integer id);


    @ApiOperation(value = "get class overview by given parameters", nickname = "getInstanceByParameters", notes = "get class overview by by given parameters", response = Object.class, tags={ "instance", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "return class list", response = Object.class),
        @ApiResponse(code = 500, message = "System internal error", response = ErrorResponseBody.class) })
    @RequestMapping(value = "/instance/list",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Object> getInstanceByParameters(@ApiParam(value = "class number limit") @Valid @RequestParam(value = "limit", required = false) Integer limit,@ApiParam(value = "class number offset") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "class name string pattern") @Valid @RequestParam(value = "name", required = false) String name,@ApiParam(value = "class type string pattern") @Valid @RequestParam(value = "type", required = false) String type,@ApiParam(value = "class type string pattern") @Valid @RequestParam(value = "content", required = false) String content);

}
